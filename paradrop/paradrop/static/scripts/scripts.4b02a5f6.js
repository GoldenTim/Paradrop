"use strict";angular.module("localApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl as mainCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl"}).when("/status",{templateUrl:"views/status.html",controller:"StatusCtrl as statusCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("localApp").controller("SettingsCtrl",["$scope",function(a){a.currentSettings={ssid:"MyAwesomeAP",channel:2,encryption:"None",key:"hunter2"},a.master=angular.copy(a.currentSettings),a.channels=[1,2,3,4],a.encryptions=["None","WPA","WP2"],a.physicalInfo={},a.apply=function(b){angular.copy(b,a.master)},a.clear=function(){angular.copy(a.master,a.currentSettings)}}]),angular.module("localApp").controller("StatusCtrl",["$scope","$http","$interval","RouterService",function(a,b,c,d){var e=this;e.eth0=null,e.eth1=null,e.eth2=null,e.wlan0=null,e.wlan1=null,e.cpuload=0,e.totalRAM=0,e.freeRAM=0,e.totalDisk=0,e.freeDisk=0;var f=function(){d.getHostStatus().then(function(a){var b=a.data;console.log(b),e.cpuload=Math.round(b.cpu),e.totalRAM=Math.round(b.memory[0]/1048576),e.freeRAM=Math.round(b.memory[1]/1048576),e.totalDisk=Math.round(b.disks[0]/1048576),e.freeDisk=Math.round(b.disks[1]/1048576)},function(a){})},g=null,h=function(){g||(g=c(f,2e3))},i=function(){g&&(c.cancel(g),g=null)};a.$on("$destroy",function(){i()}),h();var j=function(a,b,c){if(a[c]){var d=b[c].filter(function(a){return 2===a[0]})[0],f=b[c].filter(function(a){return 17===a[0]})[0];d&&f&&(e[c]={ip:d[1],netmask:d[2],mac:f[1]})}},k=function(){d.getNetInfo().then(function(a){var b=a.data,c=b.stats,d=b.addresses;j(c,d,"eth0"),j(c,d,"eth1"),j(c,d,"eth2"),j(c,d,"wlan0"),j(c,d,"wlan1")})};k()}]),angular.module("localApp").controller("MainCtrl",["$scope","$uibModal",function(a,b){var c=this;c.open=function(a){var c=b.open({animation:!0,templateUrl:"loginModalContent.html",controller:"LoginModalCtrl as loginModalCtrl"});c.result.then(function(){console.log("Confirmed")},function(){console.log("Modal dismissed")})}}]),angular.module("localApp").controller("LoginModalCtrl",["$scope","$uibModalInstance","RouterService",function(a,b,c){var d=this;d.routerId=null,d.routerPassword=null,d.login=function(){c.login(d.routerId,d.routerPassword),b.close()},d.cancel=function(){b.dismiss("cancel")}}]),angular.module("localApp").factory("RouterService",["$http","UrlService",function(a,b){var c={};return c.login=function(c,d){return a.post(b.url+"login",{routerId:c,password:d})},c.getHostStatus=function(){return a.get(b.url+"v1/hoststatus")},c.getNetInfo=function(){return a.get(b.url+"v1/netinfo")},c}]),angular.module("localApp").factory("UrlService",["$location",function(a){return{url:a.protocol()+"://"+a.host()+":14321/"}}]),angular.module("localApp").directive("convertToInt",function(){return{require:"ngModel",link:function(a,b,c,d){d.$parsers.push(function(a){return parseInt(a,10)}),d.$formatters.push(function(a){return""+a})}}}),angular.module("localApp").run(["$templateCache",function(a){a.put("views/main.html",'<h2> This router is not login to the ParaDrop backend </h2> <hr> <button ng-click="mainCtrl.open()" class="btn btn-lg btn-primary" type="button">Login</button> <script type="text/ng-template" id="loginModalContent.html"><div class="modal-header">\n      <h3 class="modal-title">Login to ParaDrop</h3>\n  </div>\n  <div class="modal-body">\n    <form class="form-horizontal" role="form">\n      <div class="form-group">\n        <label class="col-sm-2 control-label"\n               for="routerId">Router ID</label>\n        <div class="col-sm-10">\n            <input type="text" class="form-control" \n                   id="routerId" placeholder="Router ID" ng-model="loginModalCtrl.routerId"/>\n        </div>\n      </div>\n      <div class="form-group">\n        <label class="col-sm-2 control-label"\n               for="routerPassword" >Password</label>\n        <div class="col-sm-10">\n            <input type="password" class="form-control"\n                   id="routerPassword" placeholder="Password" ng-model="loginModalCtrl.routerPassword"/>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class="modal-footer">\n    <button class="btn btn-primary" type="button" ng-click="loginModalCtrl.login()">Login</button>\n    <button class="btn btn-warning" type="button" ng-click="loginModalCtrl.cancel()">Cancel</button>\n  </div></script>'),a.put("views/settings.html",'<div id="paradrop-settings-container" class="container"> <h3>Wi-Fi Settings</h3> <div class="container"> <form> <div class="form-group"> <label for="paradrop-settings-input">SSID</label> <input type="text" class="form-control" id="paradrop-settings-ssid-input" placeholder="SSID" ng-model="currentSettings.ssid" ng-trim> </div> <div class="form-group"> <label for="paradrop-settings-channel-select">Channel</label> <select class="form-control" id="paradrop-settings-channel-select" ng-model="currentSettings.channel" convert-to-int> <option ng-repeat="channel in channels" value="{{ channel }}">{{ channel }}</option> </select> </div> <div class="form-group"> <label for="paradrop-settings-encryption-select">Encryption</label> <select class="form-control" id="paradrop-settings-encryption-select" ng-model="currentSettings.encryption"> <option ng-repeat="encrType in encryptions">{{ encrType }}</option> </select> </div> <div class="form-group"> <label for="paradrop-settings-key-input">Key</label> <input type="password" class="form-control" id="paradrop-settings-key-input" ng-model="currentSettings.key"> </div> <div> <button ng-click="clear()" class="btn btn-lg btn-warning" type="button">Clear</button> <button ng-click="apply(currentSettings)" class="btn btn-lg btn-primary" type="button">Apply</button> </div> </form> </div> </div> <div> <!-- FOR TESTING ONLY --> <div class="container"> <h3>** Current Settings **</h3> <pre>{{ currentSettings | json }}</pre> </div> </div>'),a.put("views/status.html",'<h3>Network Status</h3> <div class="container"> <h4>Ethernet</h4> <pre ng-if="!statusCtrl.eth0 && !statusCtrl.eth1 && !statusCtrl.eth2">\nAll interfaces are down\n</pre> <pre ng-if="statusCtrl.eth0">\neth0  inet addr:{{statusCtrl.eth0.ip}}, Mask:{{statusCtrl.eth0.netmask}}, HW addr:{{statusCtrl.eth0.mac}}\n</pre> <pre ng-if="statusCtrl.eth1">\neth1  inet addr:{{statusCtrl.eth1.ip}}, Mask:{{statusCtrl.eth1.netmask}}, HW addr:{{statusCtrl.eth1.mac}}\n</pre> <pre ng-if="statusCtrl.eth2">\neth2  inet addr:{{statusCtrl.eth2.ip}}, Mask:{{statusCtrl.eth2.netmask}}, HW addr:{{statusCtrl.eth2.mac}}\n</pre> </div> <div class="container"> <h4>Wi-Fi</h4> <pre ng-if="!statusCtrl.wlan0 && !statusCtrl.wlan1">\nBoth interfaces are down\n</pre> <pre ng-if="statusCtrl.wlan0">\nwlan0  inet addr:{{statusCtrl.wlan0.ip}}, Mask:{{statusCtrl.wlan0.netmask}}, HW addr:{{statusCtrl.wlan0.mac}}\n</pre> <pre ng-if="statusCtrl.wlan1">\nwlan1  inet addr:{{statusCtrl.wlan1.ip}}, Mask:{{statusCtrl.wlan1.netmask}}, HW addr:{{statusCtrl.wlan1.mac}}\n</pre> </div> <h3>Computer Status</h3> <div class="container"> <pre>\nCPU load      : {{statusCtrl.cpuload}}%\nMemory (MB)   : {{statusCtrl.freeRAM}} / {{statusCtrl.totalRAM}}\nDisk Usage(MB): {{statusCtrl.freeDisk}} / {{statusCtrl.totalDisk}}</pre> </div>')}]);